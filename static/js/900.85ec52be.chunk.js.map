{"version":3,"file":"static/js/900.85ec52be.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","components/FetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__iz+ye\",\"gallery\":\"Cast_gallery__LrDoG\",\"galleryItem\":\"Cast_galleryItem__W8lgK\",\"galleryItem-image\":\"Cast_galleryItem-image__nWRmv\"};","import { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from 'components/FetchApi';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredites] = useState([]);\n  useEffect(() => {\n    getMovieCast(movieId).then(setCredites);\n  }, [movieId]);\n  return (\n    <div className={css.container}>\n      {credits.length > 0 && (\n        <ul className={css.gallery}>\n          {credits.map(({ id, name, character, photo }) => {\n            return (\n              <li key={id} className={css.galleryItem}>\n                <img className={css.galleryItem_image} src={photo} alt={name} />\n                <div>\n                  <h3>{name}</h3>\n                  <p>Character: {character}</p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nimport noPhoto from './image/Nophoto.png';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '375555662ee8c437516581273f858c4c';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendinMovies = async () => {\n  return await api\n    .get('/trending/movie/day')\n\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getSearchMovie = async query => {\n  return await api\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieDetails = movieId => {\n  return api\n    .get(`/movie/${movieId}`)\n    .then(\n      ({\n        data: {\n          id,\n          title,\n\n          genres,\n          vote_average: userScore,\n          release_date: release,\n          overview,\n          poster_path: poster,\n        },\n      }) => ({\n        id,\n        title,\n        overview,\n        userScore: Math.round(userScore * 10),\n        genres,\n        release: new Date(release).getFullYear(),\n        poster: poster ? IMG_URL + poster : noPhoto,\n      })\n    )\n\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieCast = async movieId => {\n  return await api\n    .get(`/movie/${movieId}/credits`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, profile_path: photo, character }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieReviews = async movieId => {\n  return await api\n    .get(`/movie/${movieId}/reviews`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n"],"names":["movieId","useParams","useState","credits","setCredites","useEffect","getMovieCast","then","className","css","length","map","id","name","character","photo","src","alt","api","axios","baseURL","params","api_key","IMG_URL","getTrendinMovies","get","data","results","title","poster","poster_path","noPhoto","catch","error","console","log","message","getSearchMovie","query","getMovieDetails","genres","userScore","vote_average","release","release_date","overview","Math","round","Date","getFullYear","cast","profile_path","getMovieReviews","author","content"],"sourceRoot":""}