{"version":3,"file":"static/js/65.e76de911.chunk.js","mappings":"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","sources":["components/FetchApi.js","components/Loader/Loader.js","page/Movies.js","webpack://react-homework-template/./src/components/TrendingList/TrendingList.module.css?033c"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from './image/Nophoto.png';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '375555662ee8c437516581273f858c4c';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendinMovies = async () => {\n  return await api\n    .get('/trending/movie/day')\n\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getSearchMovie = async query => {\n  return await api\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieDetails = movieId => {\n  return api\n    .get(`/movie/${movieId}`)\n    .then(\n      ({\n        data: {\n          id,\n          title,\n\n          genres,\n          vote_average: userScore,\n          release_date: release,\n          overview,\n          poster_path: poster,\n        },\n      }) => ({\n        id,\n        title,\n        overview,\n        userScore: Math.round(userScore * 10),\n        genres,\n        release: new Date(release).getFullYear(),\n        poster: poster ? IMG_URL + poster : noPhoto,\n      })\n    )\n\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieCast = async movieId => {\n  return await api\n    .get(`/movie/${movieId}/credits`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, profile_path: photo, character }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieReviews = async movieId => {\n  return await api\n    .get(`/movie/${movieId}/reviews`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n","import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStylÑƒ\n      wrapperClassName=\"wrapper-class-name\"\n    />\n  );\n};\n","import css from '../components/TrendingList/TrendingList.module.css';\n\nimport { getSearchMovie } from 'components/FetchApi';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const serchQuery = searchParams.get('query');\n  useEffect(() => {\n    if (serchQuery) {\n      setLoading(true);\n      serchQuery &&\n        getSearchMovie(serchQuery)\n          .then(setMovies)\n          .finally(() => {\n            setLoading(false);\n          });\n    }\n  }, [serchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const respons = await getSearchMovie({ query });\n    setMovies(respons);\n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n  return (\n    <>\n      <div className={css.searchbar}>\n        <form className={css.form} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.button}>\n            <span className={css.buttonLabel}></span>\n          </button>\n\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"search\"\n            autoComplete=\"off\"\n            autoFocus={true}\n            placeholder=\"Search movies\"\n            value={query}\n            onChange={onChange}\n          />\n        </form>\n      </div>\n      <div className={css.container}></div>\n      {loading ? (\n        <Loader />\n      ) : (\n        movies.length > 0 && (\n          <ul className={css.gallery}>\n            {movies.map(({ id, title, poster }) => (\n              <li className={css.galleryItem} key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    className={css.galleryItem_image}\n                    src={poster}\n                    alt={title}\n                  />\n\n                  <h3 className={css.title}>{title}</h3>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TrendingList_container__3G6gz\",\"gallery\":\"TrendingList_gallery__EhQup\",\"galleryItem\":\"TrendingList_galleryItem__+SFjK\",\"galleryItem-image\":\"TrendingList_galleryItem-image__b6qOP\",\"searchbar\":\"TrendingList_searchbar__9+Y-S\",\"form\":\"TrendingList_form__OEPVY\",\"form-button\":\"TrendingList_form-button__ZfR3M\",\"input\":\"TrendingList_input__tdRGf\"};"],"names":["api","axios","baseURL","params","api_key","IMG_URL","getTrendinMovies","get","then","data","results","map","id","title","poster","poster_path","noPhoto","catch","error","console","log","message","getSearchMovie","query","getMovieDetails","movieId","genres","userScore","vote_average","release","release_date","overview","Math","round","Date","getFullYear","getMovieCast","cast","name","photo","profile_path","character","getMovieReviews","author","content","Loader","height","width","radius","color","ariaLabel","wrapperClassName","useState","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","loading","setLoading","serchQuery","useEffect","finally","handleSubmit","e","preventDefault","respons","className","css","onSubmit","type","autoComplete","autoFocus","placeholder","value","onChange","target","length","to","state","from","src","alt"],"sourceRoot":""}