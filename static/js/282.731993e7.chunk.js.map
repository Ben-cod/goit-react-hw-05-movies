{"version":3,"file":"static/js/282.731993e7.chunk.js","mappings":"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","sources":["components/FetchApi.js","components/Loader/Loader.js","components/MoviesList/MoviesList.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","page/Movies.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from './image/Nophoto.png';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '375555662ee8c437516581273f858c4c';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrendinMovies = async () => {\n  return await api\n    .get('/trending/movie/day')\n\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getSearchMovie = async query => {\n  return await api\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieDetails = movieId => {\n  return api\n    .get(`/movie/${movieId}`)\n    .then(\n      ({\n        data: {\n          id,\n          title,\n\n          genres,\n          vote_average: userScore,\n          release_date: release,\n          overview,\n          poster_path: poster,\n        },\n      }) => ({\n        id,\n        title,\n        overview,\n        userScore: Math.round(userScore * 10),\n        genres,\n        release: new Date(release).getFullYear(),\n        poster: poster ? IMG_URL + poster : noPhoto,\n      })\n    )\n\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieCast = async movieId => {\n  return await api\n    .get(`/movie/${movieId}/credits`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, profile_path: photo, character }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const getMovieReviews = async movieId => {\n  return await api\n    .get(`/movie/${movieId}/reviews`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n","import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStylÑƒ\n      wrapperClassName=\"wrapper-class-name\"\n    />\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ trendingMovies }) => {\n  const location = useLocation();\n\n  return (\n    <div className={css.container}>\n      <ul className={css.gallery}>\n        {trendingMovies.map(({ id, title, poster }) => (\n          <li className={css.galleryItem} key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img className={css.galleryItem_image} src={poster} alt={title} />\n              <h3>{title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchForm_input__HOxJo\"};","import React, { useState } from 'react';\n\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSearch(query);\n\n    setQuery('');\n  };\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <button type=\"submit\" className={css.button}>\n        <span className={css.buttonLabel}></span>\n      </button>\n\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus={true}\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import css from '../components/MoviesList/MoviesList.module.css';\nimport { getSearchMovie } from 'components/FetchApi';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from '../components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [loading, setLoading] = useState(false);\n\n  const serchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!serchQuery) {\n      return;\n    }\n    setLoading(true);\n\n    getSearchMovie(serchQuery)\n      .then(setMovies)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [serchQuery]);\n\n  const handleSearch = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <div className={css.searchbar}>\n        <SearchForm onSearch={handleSearch} />\n      </div>\n      <div className={css.container}></div>\n      {loading ? (\n        <Loader />\n      ) : (\n        movies.length > 0 && <MoviesList trendingMovies={movies} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesList_container__0JGj2\",\"gallery\":\"MoviesList_gallery__Nw0Bb\",\"galleryItem\":\"MoviesList_galleryItem__FCIt7\",\"galleryItem-image\":\"MoviesList_galleryItem-image__x2te8\",\"searchbar\":\"MoviesList_searchbar__gjISm\",\"form\":\"MoviesList_form__kK+Ea\",\"form-button\":\"MoviesList_form-button__uadUX\",\"input\":\"MoviesList_input__X6-lf\"};"],"names":["api","axios","baseURL","params","api_key","IMG_URL","getTrendinMovies","get","then","data","results","map","id","title","poster","poster_path","noPhoto","catch","error","console","log","message","getSearchMovie","query","getMovieDetails","movieId","genres","userScore","vote_average","release","release_date","overview","Math","round","Date","getFullYear","getMovieCast","cast","name","photo","profile_path","character","getMovieReviews","author","content","Loader","height","width","radius","color","ariaLabel","wrapperClassName","trendingMovies","location","useLocation","className","css","to","state","from","src","alt","onSearch","useState","setQuery","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","movies","setMovies","useSearchParams","searchParams","setSearchParams","loading","setLoading","serchQuery","useEffect","finally","length","MoviesList"],"sourceRoot":""}